name: Build & Test Spring Boot App

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SECRET_MANAGER:
        required: true

jobs:
  build-and-test:
    name: Build & Test Spring Boot App
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    defaults:
      run:
        working-directory: ./app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

#EXPONER VARIABLES FUERA DEL JOB
#      - name: format Enviroment
#        id: format-env
#        run: echo "image_uri=${{ steps.login-ecr.outputs.registry }}/app_01:1.0.0" >> $GITHUB_OUTPUT

#EXPONER VARIABLE DENTRO DEL JOB
      # - name: Obtener nombre del repositorio
      #   run: |
      #     REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
      #     echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package

      - name: Run tests
        run: mvn test

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build Docker image
        run: |
          docker build -t app_01:1.0.0 .

      - name: Tag Docker image
        run: |
          docker tag app_01:1.0.0 ${{ steps.login-ecr.outputs.registry }}/app_01:1.0.0

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/app_01:1.0.0

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    defaults:
      run:
        working-directory: ./app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name eks-lab-cluster-utec-v2

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s.yaml
